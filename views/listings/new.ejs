<%- layout("./layouts/boilerplate.ejs") %>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<body>
    <div class="container mt-5">
        <h1 class="text-center mb-4">Create Your Listing</h1>
        <form method="POST" action="/listings" class="p-4 border rounded shadow bg-white" style="background: #f8f9fa;">
            
            <!-- Title Field -->
            <div class="mb-3">
                <label for="title" class="form-label">Job Title</label>
                <input type="text" class="form-control" id="title" placeholder="Enter job title" name="listings[title]" required autocomplete="off">
                <div class="invalid-feedback">Enter a valid job title!</div>
            </div>

            <!-- Company Name  -->
            <div class="mb-3 position-relative">
                <label for="company" class="form-label">Company Name</label>
                <input type="hidden" id="logo" name="listings[logo]">
                <input type="text" class="form-control" id="company" placeholder="Enter company name" name="listings[company]" required autocomplete="off">
                <div id="suggestions" class="list-group position-absolute" style="z-index: 1000;"></div>
                <div class="invalid-feedback">Enter a valid company name!</div>
            </div>

            <div class="row mb-3">
                <!-- Job Location -->
                <div class="col-md-6">
                    <label for="location" class="form-label">Job Location</label>
                    <input type="text" class="form-control" id="location" placeholder="Enter job location" name="listings[location]" required autocomplete="off" list="locationSuggestions">
                    <datalist id="locationSuggestions"></datalist>
                </div>                
            
                <!-- Job Type -->
                <div class="col-md-6">
                    <label for="jobType" class="form-label">Job Type</label>
                    <select class="form-select" id="jobType" name="listings[jobType]" required>
                        <option value="">Select job type</option>
                        <option value="Full-Time">Full-Time</option>
                        <option value="Part-Time">Part-Time</option>
                        <option value="Internship">Internship</option>
                        <option value="Contract">Contract</option>
                    </select>
                </div>
            </div>

            <!-- Description Field -->
            <div class="mb-3">
                <label for="description" class="form-label">Description</label>
                <textarea class="form-control" id="description" placeholder="Enter description" name="listings[description]" rows="4" required></textarea>
                <div class="invalid-feedback">Description is required!</div>
            </div>

            <!-- Requirements-->
            <div class="mb-3">
                <label for="requirements" class="form-label">Requirements</label>
                <textarea class="form-control" id="requirements" placeholder="Enter requirements" name="listings[requirements]" rows="4"></textarea>
            </div>


            <!-- Eligibility  -->
            <div class="mb-3">
                <label for="eligibility" class="form-label">Eligibility Category</label>
                <div class="dropdown">
                    <button class="btn btn-outline-secondary dropdown-toggle w-100" type="button" id="eligibilityDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        Select Eligibility
                    </button>
                    <ul class="dropdown-menu p-4" style="max-height: 800px; overflow-y: auto;font-size: 1.2rem" aria-labelledby="eligibilityDropdown">
                        <li><input type="checkbox" name="listings[eligibility][]" value="B.E" id="be"> <label for="be">B.E</label></li>
                        <li><input type="checkbox" name="listings[eligibility][]" value="B.Tech" id="btech"> <label for="btech">B.Tech</label></li>
                        <li><input type="checkbox" name="listings[eligibility][]" value="M.E" id="me"> <label for="me">M.E</label></li>
                        <li><input type="checkbox" name="listings[eligibility][]" value="M.Tech" id="mtech"> <label for="mtech">M.Tech</label></li>
                        <li><input type="checkbox" name="listings[eligibility][]" value="Diploma" id="diploma"> <label for="diploma">Diploma</label></li>
                        <li><input type="checkbox" name="listings[eligibility][]" value="B.Sc" id="bsc"> <label for="bsc">B.Sc</label></li>
                        <li><input type="checkbox" name="listings[eligibility][]" value="M.Sc" id="msc"> <label for="msc">M.Sc</label></li>
                        <li><input type="checkbox" name="listings[eligibility][]" value="Ph.D" id="phd"> <label for="phd">Ph.D</label></li>
                    </ul>
                </div>
            </div>

            <!-- Salary -->
            <div class="mb-3">
                <label for="salary" class="form-label">Salary</label>
                <input type="number" class="form-control" id="salary" placeholder="Enter salary" name="listings[salary]" min="0" required>
            </div>

            <!-- Date -->
            <div class="mb-3">
                <label for="date" class="form-label">Application Deadline</label>
                <input type="date" class="form-control" id="date" name="listings[created_at]" required>
            </div>

            <!-- Submit Button -->
            <div class="d-grid">
                <button type="submit" class="btn btn-primary">Post</button>
            </div>
        </form>
    </div>

    <script>
        const locationInput = document.getElementById('location');
        const suggestionList = document.getElementById('locationSuggestions');

        locationInput.addEventListener('input', function () {
            const query = this.value.trim();

            if (query.length < 2) {
                suggestionList.innerHTML = '';
                return;
            }

            // Replace 'YOUR_API_KEY' with your actual Google Places API key
            fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${query}&types=(cities)&key=YOUR_API_KEY`)
                .then(response => response.json())
                .then(data => {
                    suggestionList.innerHTML = '';

                    if (data.status === 'OK') {
                        data.predictions.forEach(prediction => {
                            const option = document.createElement('option');
                            option.value = prediction.description;
                            suggestionList.appendChild(option);
                        });
                    }
                })
                .catch(err => console.error('Error fetching location suggestions:', err));
        });


        //add requirement Function
        function addRequirement() {
            const input = document.getElementById('requirementInput');
            const list = document.getElementById('requirementList');
            const hiddenField = document.getElementById('requirementsField');
            const requirement = input.value.trim();

            if (requirement) {
                // Create list item
                const listItem = document.createElement('li');
                listItem.className = 'list-group-item d-flex justify-content-between align-items-center';
                listItem.innerHTML = `
                    ${requirement}
                    <button type="button" class="btn btn-sm btn-danger" onclick="removeRequirement(this)">Remove</button>
                `;
                list.appendChild(listItem);

                
                updateRequirementsField();
                input.value = ''; 
            }
        }

        // Function to remove a requirement
        function removeRequirement(button) {
            const listItem = button.parentElement;
            listItem.remove();
            updateRequirementsField();
        }

        // Function to update the hidden input field with all requirements
        function updateRequirementsField() {
            const listItems = document.querySelectorAll('#requirementList li');
            const requirements = Array.from(listItems).map(item => item.textContent.trim());
            document.getElementById('requirementsField').value = requirements.join('; ');
        }

        //  Company suggestions
        document.getElementById('company').addEventListener('input', function () {
            const query = this.value.trim();
            if (query.length < 2) {
                document.getElementById('suggestions').innerHTML = '';
                return;
            }
    
            // Suggestions - Clearbit API
            fetch(`https://autocomplete.clearbit.com/v1/companies/suggest?query=${query}`)
                .then(response => response.json())
                .then(data => {
                    const suggestions = data.map(company => `
                        <button type="button" class="list-group-item list-group-item-action d-flex align-items-center" 
                                onclick="selectCompany('${company.name}', '${company.logo}')">
                            <img src="${company.logo}" alt="${company.name} logo" class="me-2" 
                                 style="width: 30px; height: 30px; border-radius: 50%;">
                            <span>${company.name}</span>
                        </button>
                    `).join('');
                    document.getElementById('suggestions').innerHTML = suggestions;
                })
                .catch(err => console.error('Error fetching companies:', err));
        });

        function selectCompany(company, logo) {
            document.getElementById('company').value = company;
            document.getElementById('logo').value = logo;
            document.getElementById('suggestions').innerHTML = '';
        }
    </script>
</body>
